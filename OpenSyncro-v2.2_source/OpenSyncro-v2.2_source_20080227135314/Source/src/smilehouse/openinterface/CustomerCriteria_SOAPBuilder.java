/* OpenSyncro - A web-based enterprise application integration tool
 * Copyright (C) 2008 Smilehouse Oy, support@opensyncro.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1, build R59)

package smilehouse.openinterface;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.util.exception.LocalizableExceptionAdapter;

public class CustomerCriteria_SOAPBuilder implements SOAPInstanceBuilder {
    private smilehouse.openinterface.CustomerCriteria _instance;
    private java.util.Calendar adminModifiedAfter;
    private java.util.Calendar adminModifiedBefore;
    private java.lang.String customerGroup;
    private java.lang.String customerId;
    private java.util.Calendar customerModifiedAfter;
    private java.util.Calendar customerModifiedBefore;
    private java.util.Calendar firstVisitDateAfter;
    private java.util.Calendar firstVisitDateBefore;
    private java.lang.String idGreaterThan;
    private java.lang.String[] idIn;
    private java.lang.String idLessThan;
    private java.util.Calendar lastVisitDateAfter;
    private java.util.Calendar lastVisitDateBefore;
    private java.lang.String modifyOperation;
    private java.lang.String primaryCustomerGroup;
    private static final int myADMINMODIFIEDAFTER_INDEX = 0;
    private static final int myADMINMODIFIEDBEFORE_INDEX = 1;
    private static final int myCUSTOMERGROUP_INDEX = 2;
    private static final int myCUSTOMERID_INDEX = 3;
    private static final int myCUSTOMERMODIFIEDAFTER_INDEX = 4;
    private static final int myCUSTOMERMODIFIEDBEFORE_INDEX = 5;
    private static final int myFIRSTVISITDATEAFTER_INDEX = 6;
    private static final int myFIRSTVISITDATEBEFORE_INDEX = 7;
    private static final int myIDGREATERTHAN_INDEX = 8;
    private static final int myIDIN_INDEX = 9;
    private static final int myIDLESSTHAN_INDEX = 10;
    private static final int myLASTVISITDATEAFTER_INDEX = 11;
    private static final int myLASTVISITDATEBEFORE_INDEX = 12;
    private static final int myMODIFYOPERATION_INDEX = 13;
    private static final int myPRIMARYCUSTOMERGROUP_INDEX = 14;
    
    public CustomerCriteria_SOAPBuilder() {
    }
    
    public void setAdminModifiedAfter(java.util.Calendar adminModifiedAfter) {
        this.adminModifiedAfter = adminModifiedAfter;
    }
    
    public void setAdminModifiedBefore(java.util.Calendar adminModifiedBefore) {
        this.adminModifiedBefore = adminModifiedBefore;
    }
    
    public void setCustomerGroup(java.lang.String customerGroup) {
        this.customerGroup = customerGroup;
    }
    
    public void setCustomerId(java.lang.String customerId) {
        this.customerId = customerId;
    }
    
    public void setCustomerModifiedAfter(java.util.Calendar customerModifiedAfter) {
        this.customerModifiedAfter = customerModifiedAfter;
    }
    
    public void setCustomerModifiedBefore(java.util.Calendar customerModifiedBefore) {
        this.customerModifiedBefore = customerModifiedBefore;
    }
    
    public void setFirstVisitDateAfter(java.util.Calendar firstVisitDateAfter) {
        this.firstVisitDateAfter = firstVisitDateAfter;
    }
    
    public void setFirstVisitDateBefore(java.util.Calendar firstVisitDateBefore) {
        this.firstVisitDateBefore = firstVisitDateBefore;
    }
    
    public void setIdGreaterThan(java.lang.String idGreaterThan) {
        this.idGreaterThan = idGreaterThan;
    }
    
    public void setIdIn(java.lang.String[] idIn) {
        this.idIn = idIn;
    }
    
    public void setIdLessThan(java.lang.String idLessThan) {
        this.idLessThan = idLessThan;
    }
    
    public void setLastVisitDateAfter(java.util.Calendar lastVisitDateAfter) {
        this.lastVisitDateAfter = lastVisitDateAfter;
    }
    
    public void setLastVisitDateBefore(java.util.Calendar lastVisitDateBefore) {
        this.lastVisitDateBefore = lastVisitDateBefore;
    }
    
    public void setModifyOperation(java.lang.String modifyOperation) {
        this.modifyOperation = modifyOperation;
    }
    
    public void setPrimaryCustomerGroup(java.lang.String primaryCustomerGroup) {
        this.primaryCustomerGroup = primaryCustomerGroup;
    }
    
    public int memberGateType(int memberIndex) {
        switch (memberIndex) {
            case myCUSTOMERGROUP_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myCUSTOMERID_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myIDGREATERTHAN_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myIDIN_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myIDLESSTHAN_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myMODIFYOPERATION_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myPRIMARYCUSTOMERGROUP_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            default:
                throw new IllegalArgumentException();
        }
    }
    
    public void construct() {
    }
    
    public void setMember(int index, Object memberValue) {
        try {
            switch(index) {
                case myCUSTOMERGROUP_INDEX:
                    _instance.setCustomerGroup((java.lang.String)memberValue);
                    break;
                case myCUSTOMERID_INDEX:
                    _instance.setCustomerId((java.lang.String)memberValue);
                    break;
                case myIDGREATERTHAN_INDEX:
                    _instance.setIdGreaterThan((java.lang.String)memberValue);
                    break;
                case myIDIN_INDEX:
                    _instance.setIdIn((java.lang.String[])memberValue);
                    break;
                case myIDLESSTHAN_INDEX:
                    _instance.setIdLessThan((java.lang.String)memberValue);
                    break;
                case myMODIFYOPERATION_INDEX:
                    _instance.setModifyOperation((java.lang.String)memberValue);
                    break;
                case myPRIMARYCUSTOMERGROUP_INDEX:
                    _instance.setPrimaryCustomerGroup((java.lang.String)memberValue);
                    break;
                default:
                    throw new IllegalArgumentException();
            }
        }
        catch (RuntimeException e) {
            throw e;
        }
        catch (Exception e) {
            throw new DeserializationException(new LocalizableExceptionAdapter(e));
        }
    }
    
    public void initialize() {
    }
    
    public void setInstance(Object instance) {
        _instance = (smilehouse.openinterface.CustomerCriteria)instance;
    }
    
    public Object getInstance() {
        return _instance;
    }
}
