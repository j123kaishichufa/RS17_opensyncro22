/* OpenSyncro - A web-based enterprise application integration tool
 * Copyright (C) 2008 Smilehouse Oy, support@opensyncro.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1, build R59)

package smilehouse.openinterface;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class OpenInterfaceIF_importPricelist_RequestStruct_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final QName ns1_LoginInfo_1_QNAME = new QName("", "LoginInfo_1");
    private static final QName ns2_LoginInfo_TYPE_QNAME = new QName("http://www.smilehouse.com/types", "LoginInfo");
    private CombinedSerializer ns2_myLoginInfo_SOAPSerializer;
    private static final QName ns1_String_2_QNAME = new QName("", "String_2");
    private static final QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final QName ns1_int_3_QNAME = new QName("", "int_3");
    private static final QName ns3_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns3_myns3__int__int_Int_Serializer;
    private static final int myLOGININFO_1_INDEX = 0;
    private static final int mySTRING_2_INDEX = 1;
    private static final int myINT_3_INDEX = 2;
    
    public OpenInterfaceIF_importPricelist_RequestStruct_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns2_myLoginInfo_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, smilehouse.openinterface.LoginInfo.class, ns2_LoginInfo_TYPE_QNAME);
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, int.class, ns3_int_TYPE_QNAME);
    }
    
    public Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct instance = new smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct();
        smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct_SOAPBuilder builder = null;
        Object member;
        boolean isComplete = true;
        QName elementName;
        
        reader.nextElementContent();
        for (int i=0; i<3; i++) {
            elementName = reader.getName();
            if (reader.getState() == XMLReader.END) {
                break;
            }
            if (elementName.equals(ns1_LoginInfo_1_QNAME)) {
                member = ns2_myLoginInfo_SOAPSerializer.deserialize(ns1_LoginInfo_1_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myLOGININFO_1_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setLoginInfo_1((smilehouse.openinterface.LoginInfo)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_String_2_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_String_2_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySTRING_2_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setString_2((java.lang.String)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_int_3_QNAME)) {
                member = ns3_myns3__int__int_Int_Serializer.deserialize(ns1_int_3_QNAME, reader, context);
                instance.setInt_3(((Integer)member).intValue());
                reader.nextElementContent();
                continue;
            } else {
                throw new DeserializationException("soap.unexpectedElementName", new Object[] {ns1_int_3_QNAME, elementName});
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (Object)instance : (Object)state);
    }
    
    public void doSerializeAttributes(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct instance = (smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct)obj;
        
    }
    
    public void doSerializeInstance(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct instance = (smilehouse.openinterface.OpenInterfaceIF_importPricelist_RequestStruct)obj;
        
        ns2_myLoginInfo_SOAPSerializer.serialize(instance.getLoginInfo_1(), ns1_LoginInfo_1_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getString_2(), ns1_String_2_QNAME, null, writer, context);
        ns3_myns3__int__int_Int_Serializer.serialize(new Integer(instance.getInt_3()), ns1_int_3_QNAME, null, writer, context);
    }
}
